name: Build and Release Kernels
permissions:
  contents: write
  actions: write
 
on:
  workflow_dispatch:
    inputs:

      run_type:
        description: 'Run Type'
        required: true
        type: choice
        options:
          - manual
          - matrix
        default: 'manual'
      ksu_type:
        description: 'KernelSU type'
        required: true
        type: choice
        options:
          - ksu-next
          - ksu
        default: 'ksu-next'
      hooks_type:
        description: 'Hooks Type'
        required: true
        type: choice
        options:
          - manual
          - kprobes
        default: kprobes
      device:
        description: 'Device codename'
        required: true
        type: string
        default: 'shusky'
      stock_ota:
        description: 'Stock Full OTA'
        required: true
        type: string
        default: shiba-bp3a.250905.014-factory-f927be20.zip
      pixel-source-branch:
        description: 'Pixel Source Branch'
        required: true
        type: string
        default: android-gs-shusky-6.1-android16
      aosp-spoofing:
        description: 'Enable AOSP Spoofing?'
        required: false
        type: string
        default: android14-6.1-2025-05_r8
      susfs:
        description: 'Enable SUSFS?'
        required: true
        type: boolean
        default: true
      debug_module_list:
        description: 'Build Debug Module List?'
        required: false
        type: boolean
        default: false
      create_release:
        description: 'Create a release after matrix build?'
        required: true
        type: boolean
        default: false

jobs:
  # Мануальная сборка с пользовательскими параметрами
  build-kernel-manual:
    if: github.event.inputs.run_type == 'manual'
    uses: ./.github/workflows/build.yml
    with:
      device: ${{ github.event.inputs.device }}
      ksu_type: ${{ github.event.inputs.ksu_type }}
      susfs: ${{ github.event.inputs.susfs }}
      debug_module_list: ${{ github.event.inputs.debug_module_list }}
      stock_ota: ${{ github.event.inputs.stock_ota }}
      pixel-source-branch: ${{ github.event.inputs.pixel-source-branch }}
      aosp-spoofing: ${{ github.event.inputs.aosp-spoofing }}
      hooks_type: ${{ github.event.inputs.hooks_type }}

  # Матричная сборка с комбинированием ksu_type, susfs и hooks_type
  build-kernel-matrix:
    if: github.event.inputs.run_type == 'matrix'
    strategy:
      matrix:
        ksu_type: [ksu-next, ksu]
        susfs: [true, false]
        hooks_type: [manual, kprobes]
        exclude:
          # Запрещаем комбинацию ksu + manual
          - ksu_type: ksu
            hooks_type: manual
    uses: ./.github/workflows/build.yml
    with:
      device: 'shusky'
      ksu_type: ${{ matrix.ksu_type }}
      susfs: ${{ matrix.susfs }}
      debug_module_list: false
      stock_ota: 'shiba-bp3a.250905.014-factory-f927be20.zip'
      pixel-source-branch: 'android-gs-shusky-6.1-android16'
      aosp-spoofing: 'android14-6.1-2025-05_r8'
      hooks_type: ${{ matrix.hooks_type }}

  create-release:
    name: Create Release
    if: github.event.inputs.run_type == 'matrix' && github.event.inputs.create_release == 'true'
    needs: build-kernel-matrix
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare release assets
        run: |
          mkdir release_assets
          cd artifacts

          find . -type f \( -name '*.zip' -o -name '*.gz' \) -exec mv {} ../release_assets/ \;

          cd ..
          echo "Files for release:"
          ls -lR release_assets

      - name: Create Release
        id: create_release
        run: |
          set -e
          TAG_NAME="build-${{ github.event.inputs.device }}-${{ github.run_id }}"
          RELEASE_NAME="Kernel for ${{ github.event.inputs.device }} - Build #${{ github.run_number }}"
          
          BODY="Automated kernel build release from matrix.
          - **Device**: ${{ github.event.inputs.device }}
          - **Pixel Source Branch**: ${{ github.event.inputs.pixel-source-branch }}
          - **AOSP Spoofing Tag**: ${{ github.event.inputs.aosp-spoofing || 'N/A' }}
          "

          gh release create "$TAG_NAME" --title "$RELEASE_NAME" --notes "$BODY"
          echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Release Assets
        run: gh release upload ${{ steps.create_release.outputs.tag_name }} release_assets/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}